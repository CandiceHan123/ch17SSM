<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ujn.ch17.dao.RobeMapper">
  <resultMap id="BaseResultMap" type="cn.edu.ujn.ch17.dao.Robe">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="occupied" jdbcType="BIT" property="occupied" />
    <result column="rent" jdbcType="REAL" property="rent" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, occupied, rent,telephone
  </sql>
  <select id="selectByExample" parameterType="cn.edu.ujn.ch17.dao.RobeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from robe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from robe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    *
    from robe
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from robe
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.ujn.ch17.dao.RobeExample">
    delete from robe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.ujn.ch17.dao.Robe">
    insert into robe (id, occupied, rent,telephone)
    values (#{id,jdbcType=INTEGER}, #{occupied,jdbcType=BIT}, #{rent,jdbcType=REAL}, #{telephone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ujn.ch17.dao.Robe">
    insert into robe
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="occupied != null">
        occupied,
      </if>
      <if test="rent != null">
        rent,
      </if>
    </trim>
    <if test="telephone != null">
      telephone,
    </if>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="occupied != null">
        #{occupied,jdbcType=BIT},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=REAL},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ujn.ch17.dao.Robe">
    update robe
    <set>
      <if test="occupied != null">
        occupied = #{occupied,jdbcType=BIT},
      </if>
      <if test="rent != null">
        rent = #{rent,jdbcType=REAL},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ujn.ch17.dao.Robe">
    update robe
    set occupied = #{occupied,jdbcType=BIT},
      rent = #{rent,jdbcType=REAL},
      telephone = #{telephone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>